import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o as e,a as s}from"./app-Nr-PI2U7.js";const a={},n=s(`<h1 id="模式匹配" tabindex="-1"><a class="header-anchor" href="#模式匹配"><span>模式匹配</span></a></h1><blockquote><p>是一种测试<code>表达式</code>是否具有<code>特定特征</code>的方式</p><p>是简化代码、提高可读性和灵活处理不同类型和条件</p></blockquote><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" data-title="c#" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">object</span><span style="--shiki-light:#6F42C1;--shiki-dark:#E06C75;"> obj</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;hello world&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">obj</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> is</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">    Console</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">WriteLine</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),r=[n];function l(p,h){return e(),i("div",null,r)}const d=t(a,[["render",l],["__file","pattern-matching.html.vue"]]),k=JSON.parse('{"path":"/c_-basics/c_/star/pattern-matching.html","title":"模式匹配","lang":"zh-CN","frontmatter":{"title":"模式匹配","icon":"file","order":1,"author":"dong runze","date":"2024-07-18T00:00:00.000Z","category":["高级"],"tag":["模式匹配"],"description":"模式匹配 是一种测试表达式是否具有特定特征的方式 是简化代码、提高可读性和灵活处理不同类型和条件","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/c_-basics/c_/star/pattern-matching.html"}],["meta",{"property":"og:site_name","content":"C#学习"}],["meta",{"property":"og:title","content":"模式匹配"}],["meta",{"property":"og:description","content":"模式匹配 是一种测试表达式是否具有特定特征的方式 是简化代码、提高可读性和灵活处理不同类型和条件"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-19T08:41:10.000Z"}],["meta",{"property":"article:author","content":"dong runze"}],["meta",{"property":"article:tag","content":"模式匹配"}],["meta",{"property":"article:published_time","content":"2024-07-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-19T08:41:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"模式匹配\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-07-18T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-19T08:41:10.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"dong runze\\"}]}"]]},"headers":[],"git":{"createdTime":1721370322000,"updatedTime":1721378470000,"contributors":[{"name":"Gce","email":"1749492810@qq.com","commits":3}]},"readingTime":{"minutes":0.27,"words":80},"filePathRelative":"c#-basics/c#/star/pattern-matching.md","localizedDate":"2024年7月18日","autoDesc":true}');export{d as comp,k as data};
